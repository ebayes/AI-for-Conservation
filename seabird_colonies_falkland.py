# -*- coding: utf-8 -*-
"""seabird_colonies_falkland.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1kNlMaozgUV4rmE0zjjAk_yad2R46kVPT

##Drones and deep learning produce accurate and efficient monitoring of large-scale seabird colonies 
(https://research.repository.duke.edu/concern/datasets/kp78gh20s?locale=en)

###Requirements
"""

import pandas as pd
import requests
from PIL import Image
from io import BytesIO

"""##Count images and annotations"""

# Load annotation files
albatross_annotations_val = "https://raw.githubusercontent.com/ebayes/aerial-drone-data/main/csv%20files/albatross_val_annotations_final.csv"
albatross_annotations_train = "https://raw.githubusercontent.com/ebayes/aerial-drone-data/main/csv%20files/albatross_train_annotations_final.csv"
albatross_annotations_test = "https://raw.githubusercontent.com/ebayes/aerial-drone-data/main/csv%20files/albatross_test_annotations_final.csv"

penguin_annotations_val = "https://raw.githubusercontent.com/ebayes/aerial-drone-data/main/csv%20files/penguin_val_annotations_final.csv"
penguin_annotations_train = "https://raw.githubusercontent.com/ebayes/aerial-drone-data/main/csv%20files/penguin_train_annotations_final.csv"
penguin_annotations_test = "https://raw.githubusercontent.com/ebayes/aerial-drone-data/main/csv%20files/penguin_test_annotations_final.csv"

# Read the CSV files into dataframes and add column names
df_albatross_val = pd.read_csv(albatross_annotations_val, names=["image", "x", "y", "w", "h", "species"])
df_albatross_train = pd.read_csv(albatross_annotations_train, names=["image", "x", "y", "w", "h", "species"])
df_albatross_test = pd.read_csv(albatross_annotations_test, names=["image", "x", "y", "w", "h", "species"])
df_albatross = pd.concat([df_albatross_val, df_albatross_train, df_albatross_test], ignore_index=True)

df_penguin_val = pd.read_csv(penguin_annotations_val, names=["image", "x", "y", "w", "h", "species"])
df_penguin_train = pd.read_csv(penguin_annotations_train, names=["image", "x", "y", "w", "h", "species"])
df_penguin_test = pd.read_csv(penguin_annotations_test, names=["image", "x", "y", "w", "h", "species"])
df_penguin = pd.concat([df_penguin_val, df_penguin_train, df_penguin_test], ignore_index=True)

# Count annotations
num_annotations_penguin = len(df_penguin)
num_annotations_albatross = len(df_albatross)

# Print the number of rows
print(num_annotations_albatross)
print(num_annotations_penguin)

"""## Calculate average animal size in pixels"""

# Calculate the mean width and height of the bounding boxes
mean_width = df_albatross['w'].mean()
mean_height = df_albatross['h'].mean()

# Print the results
print(f"Average width: {mean_width:.2f}")
print(f"Average height: {mean_height:.2f}")

# Calculate the mean width and height of the bounding boxes
mean_width = df_penguin['w'].mean()
mean_height = df_penguin['h'].mean()

# Print the results
print(f"Average width: {mean_width:.2f}")
print(f"Average height: {mean_height:.2f}")

"""##Render annotations for a sample image file"""

# load sample image 
def load_sample_image(url):
    response = requests.get(url)
    img = Image.open(BytesIO(response.content))
    return img

url = "https://github.com/ebayes/aerial-drone-data/blob/main/csv%20files/seabird_colonies_falkland_sample_image.png?raw=true"
image = load_sample_image(url)
image.show()