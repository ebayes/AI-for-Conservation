# -*- coding: utf-8 -*-
"""cattle_detection_japan.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1OnTkgMTgyLplSD99DCikHdjI6ITd3oWm

##Cattle detection and counting in UAV images based on convolutional neural networks dataset 
(http://bird.nae-lab.org/cattle/)

###Requirements
"""

import pandas as pd
import requests
from PIL import Image, ImageDraw
from io import BytesIO
from google.colab import files

"""##Count images and annotations"""

# load annotation files
annotation_file1 = "http://bird.nae-lab.org/cattle/dataset2_annotation.txt"
annotation_file2 = "http://bird.nae-lab.org/cattle/dataset1_annotation.txt"

df_1 = pd.read_table(annotation_file1, delimiter='\t')
df_2 = pd.read_table(annotation_file2, delimiter='\t')

combined_df = pd.concat([df_1, df_2], ignore_index=True)

# count images
print('Number of images:')
print(len(combined_df))

# count annotations
total_annotations = combined_df['num'].sum()
print('Number of annotations:')
print(total_annotations)

"""## Calculate average animal size in pixels"""

# Calculate the mean width and height of the bounding boxes
mean_width = combined_df['w'].mean()
mean_height = combined_df['h'].mean()

# Print the results
print(f"Average width: {mean_width:.2f}")
print(f"Average height: {mean_height:.2f}")

"""##Render annotations for a sample image file"""

# load sample image 
def load_sample_image(url):
    response = requests.get(url)
    img = Image.open(BytesIO(response.content))
    return img

image_url = "https://github.com/ebayes/aerial-drone-data/blob/main/cattle_detection_japan_sample_image.JPG?raw=true"
sample_image = load_sample_image(image_url)

#image.show()

# get bounding box info
def get_bbox(df, image):
    filtered_df = df[df['image'] == image]
    x, y, w, h = filtered_df[['x', 'y', 'w', 'h']].values[0]
    return x, y, w, h

image_26 = 'DJI_0026.JPG'
bbox = get_bbox(combined_df, image_26)

draw_bbox(sample_image, x, y, w, h)